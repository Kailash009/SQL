Types of JOIN -
----------------------------
1. Inner Join.
2. Outer Join. 
	a) Left    b) Right  c) Full
3. Cross Join.
4. Natural Join.
5. Self Join.
-----------------------------------------------------------------------------------------
1. Inner Join:-
----------------------------
>> It is used to fetch only common/matching records from the table.
Syntax:-
---------------------
select <Colname_List> from tablename1 inner join or join tableName2 on <Joining_Condition>
----------------------------------------------------------------------------------------------------------------------------------------
2. Outer Join 
>> It returns matching and unmatching records from the table.
a) Left Outer Join.
>> It returns all records from the left table,matching record from the right table and unmatched return NULL.
Syntax:-
-----------------
select * from tablename1 left outer join tableName2 on <Joining_Condition>
------------------------------------------------------------------------------------------------------------------------------------------------------
b) Right Outer Join.
>> It returns all records from the right table,matching record from the left table and unmatched return NULL.
Syntax:-
-----------------
select * from tablename1 right outer join tableName2 on <Joining_Condition>
c) Full Outer Join.
>> It returns all records from the left table and right table whereever it find unmatched return NULL.
Syntax:-
-----------------
select * from tablename1 full outer join tableName2 on <Joining_Condition>
--------------------------------------------------------------------------------------------------------------------------------------------------------
3. Cross Join.
>> M*N
Syntax:-
-----------------
select * from tablename1 cross  join tableName2 
-----------------------------------------------------------------------------------------------------------------------
4. Natural Join.
>> It doesn't support in sql server.
>> It support in Oracle.
------------------------------------------------------------------------------------------------
5. Self Join.
>> Joining a table itself is called self-join.
>> no requirement of two table.
>> No. of alias. with the help of alias we create duplicate tables.
------------------------------------------------------------------------------------------------
SET OPERATORS:-
---------------------------------------------
>> It is used to perform operation on multiple Tables.
Follow some condition to implement set operator in your query-
	a) No. of column must be same of both the table.
	b) Order of column must be same of both the table. 	 
	c) Data type must be match of both the table.
-------------------------------------------------------------------------------------------------------
There are four types of set operator :-
1. UNION.  ->> It doesn't return duplicate record from the table.
2. UNION ALL. ->> It return duplicate record from the table.
3. INTERSECT. -> It return common record from the table.
4. EXCEPT. -> It return all the record from table1 that doesn't exist in table2. (table1-table2)
	It return all the record from table2 that doesn't exist in table1. (table2-table1)
-----------------------------------------------------------------------------------------------------------------------------------------------------
alter - 
----------------
a)  To add New Column.
alter table tablename add columname datatype(size)
---------------------------------------------------------------------------------------
b) To Delete Unwanted Column.
alter table tablename drop column column_Name
-------------------------------------------------------------------------------------
c) ALTER TABLE - RENAME COLUMN
sp_rename 'TableName.OLDColumnName','NEW COLUMN NAME'
d)ALTER TABLE - ALTER/MODIFY DATATYPE
ALTER TABLE table_name ALTER COLUMN column_name datatype;
-------------------------------------------------------------------------------------------------------------
select * from tbl_Course
select * from tbl_Student
-- WAQ to get how many students enrolled in python course.
--select <Colname_List> from tablename1 inner join or join tableName2 on <Joining_Condition>
select sname,saddress,sfee,cname from tbl_Course inner join tbl_Student on tbl_Course.cid=tbl_Student.cid and cname='python'
--or
select s1.sname,s1.saddress,s1.sfee,c1.cname from tbl_Course c1 inner join tbl_Student s1 on c1.cid=s1.cid
-- OUTER JOIN
select * from tbl_Course -- 7
select * from tbl_Student -- 9 7*9 = 63 ROWS
-- LEFT OUTER JOIN
select * from tbl_Course left outer join tbl_Student on tbl_Course.cid=tbl_Student.cid
-- RIGHT OUTER JOIN
select * from tbl_Student right outer join tbl_Course on tbl_Course.cid=tbl_Student.cid
-- FULL OUTER JOIN
select * from tbl_Student full outer join tbl_Course on tbl_Course.cid=tbl_Student.cid
select * from tbl_Course full outer join tbl_Student on tbl_Course.cid=tbl_Student.cid

--CROSS JOIN
select * from tbl_Course cross join tbl_Student

select * from tbl_Employee
-- WAQ TO GET TOTAL NO. OF EMPLOYEE WHO ARE GETTING THE SAME SALARY AS THE EMPLOYEE SANJEEV IS GETTING.
select * from tbl_Employee where salary=2345.67 -- SALARY IS NOT GIVEN HERE....
select * from tbl_Employee where ename='sanjeev' 
select e1.ename,e1.post,e1.salary from tbl_Employee e1,tbl_Employee e2 where e1.salary=e2.salary and e2.ename='sanjeev'
--select * from tbl_Employee where salary=(select salary from tbl_Employee where ename='sanjeev') -- SubQuery
-----------------------------------------------------
-- SET OPERATORS
create table tbl_hyd
(
bid int,
bname nvarchar(50),
city nvarchar(50)
)
create table tbl_chennai
(
bid int,
bname nvarchar(50),
city nvarchar(50)
)
select * from tbl_chennai
select * from tbl_hyd

select * from tbl_chennai
union
select * from tbl_hyd

select * from tbl_chennai
union all
select * from tbl_hyd

select * from tbl_chennai
intersect
select * from tbl_hyd

select * from tbl_chennai
except
select * from tbl_hyd
-------------------------------------------------------
select * from tbl_Employee
--alter table tablename add columname datatype(size)
alter table tbl_Employee add pincode int
alter table tbl_Employee drop column pincode
--ALTER TABLE table_name RENAME COLUMN old_name to new_name;
sp_rename 'tbl_Employee.ename','Employee_Name'
-- ALTER TABLE table_name ALTER COLUMN column_name datatype;
alter table tbl_Employee alter column post nvarchar(200)
select * from tbl_Employee
========================================================================
Stored Procedure - Pending.
--------------------------------------------------------------------------------------------------





























































