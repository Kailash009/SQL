Relationship between Tables:-
------------------------------------------------------------------------------
1. One to One.  -> Student   -- PersonalDetail
2. One to Many or Many to One. -> Student -> PaymentDetails
3. Many to Many.  -> Student - Course
1 S => Many Course.
1C => Many Student
------------------------------------------------------------------------------------
Why we need Relationship among tables:-
-------------------------------------------------------------------------------------
>> When one table doesn't provide complete information then we need to fetch record among multiple tables.
For Example:-
-----------------------------
Student - Course
----------------------------
Student
--------------------
sid sname age mobileno fee course
-----------------------------------------------------------
1    ram    19    987979   1299    python
2    ram  19      "              4500 DOt net  ---> we are unable to maintain multiple courses of Ram then we need to create another separate table of course in which we maintain course information.
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Course
--------------------
cid(P.K) cname
---------------------
1        python
2        sql
3       dot net
Student
---------------
sid (P.K) sname age mobileno sfee cid --- (F.K.)
--------------------------------------------------------------------------------------------
1              ram      18       3434  2439  2
-------------------------------------------------------------------------------------------
JOINS IN SQL SERVER:-
------------------------------------------------------
>> It is used to combine record from more than one table.
------------------------------------------------------------------------------------------
Types of JOIN:-
--------------------------------
There are two types of Join in Sql Server:-
--------------------------------------------------------------------
a) ANSI Format. (American National Standard Information)  -> New Style Format. -> (with on condition).
	a) Inner Join.
	b) Outer Join.  => i) Left Outer.  ii) Right Outer.  iii) Full Outer. 
	c) Cross Join.
	d) Natural Join.
b) Non-ANSI Format. -> OLD Style Format. (with where condition).
	i) Equi - Join.
	ii) Non-Equi Join.
	iii) Self Join.
------------------------------------------------------------------------------------------------------------------------------------------------------------
a) ANSI Format. (American National Standard Information)  -> New Style Format. -> (with on condition).
	a) Inner Join.
>> It retrieve only matching records from the table.
Syntax:-
---------------------
select <List of Column> from table1 inner join table2 on <Joining_Condition>
-------------------------------------------------------------------------------------------------------------------------------------	
	b) Outer Join.  => i) Left Outer.  ii) Right Outer.  iii) Full Outer. 
>> Outer join retrieve matching and unmatching records from multiple tables.
i) Left Outer -> It returns all records from left table,matching record from the right table,whereever find unmatched return NULL.
Syntax:-
-------------------------
select * from TN1 left outer join TN2 on <Joining Condition>
ii) Right Outer -> It returns all records from right table,matching record from the left table,whereever find unmatched return NULL.
Syntax:-
-------------------------
select * from TN1 right outer join TN2 on <Joining Condition>
iii) Full Outer -> It returns all records from both the table,whereever find unmatched return NULL.
Syntax:-
-------------------------
select * from TN1 full outer join TN2 on <Joining Condition>
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	c) Cross Join.
>> It find product. (m*n)
Syntax:-
-------------------
select * from TN1 cross join TN2
--------------------------------------------------------------------------------------
	d) Natural Join. 
>> It is not supported in Sql server, it supported in Oracle.
>> But if you want to support natural join in Sql then you should know about Equi-Join.
>> Here, Equi-Join is similar to Natural Join.
------------------------------------------------------------------------------------------------------------------------------------------------
create database BatchPawan
use BatchPawan
-- Relationship among tables.
-- Course
create table tbl_Course  -- Parent Table.
(
cid int primary key identity(1,1),
cname nvarchar(50)
)
-- Student
create table tbl_Student  -- Child Table
(
sid int primary key identity(1,1),
sname nvarchar(50),
age int,
mobileno nvarchar(50),
sfee money,
cid int foreign key references tbl_Course(cid)  -- Syntax to create Foreign key.
)
select * from tbl_Course 
select * from tbl_Student
-- INNER JOIN (Only fetch Matching Records.)
-- waq to get total no. of students enrolled in sql course.
--select <List of Column> from table1 inner join table2 on <Joining_Condition>
select sname,mobileno,sfee,cname from tbl_Student inner join tbl_Course on tbl_Student.cid=tbl_Course.cid and cname='sql'
-- or
select s1.sname,s1.age,s1.mobileno,s1.sfee,c1.cname from tbl_Student s1 inner join tbl_Course c1 on s1.cid=c1.cid and c1.cname='sql' 

-- OUTER JOIN
--------------------------
--select * from TN1 left outer join TN2 on <Joining Condition>
-- LEFT OUTER JOIN
select * from tbl_Course left outer join tbl_Student on tbl_Course.cid=tbl_Student.cid

-- RIGHT OUTER JOIN
select * from tbl_Student right outer join tbl_Course on tbl_Student.cid=tbl_Course.cid

-- FULL OUTER JOIN
select * from tbl_Course full outer join tbl_Student on tbl_Course.cid=tbl_Student.cid
select * from tbl_Student full outer join tbl_Course on tbl_Course.cid=tbl_Student.cid


select * from tbl_Student  -- 11 rows
select * from tbl_Course --  8 rows  cross join 11*8 = 88 rows

--select * from TN1 cross join TN2
select * from tbl_Student cross join tbl_Course
------------------------------------------------------------------------------------------------------------------------------------------------
b) Non-ANSI Format. -> OLD Style Format. (with where condition).  --- PENDING
	i) Equi - Join.
	ii) Non-Equi Join.
	iii) Self Join.
---------------------------------------------------------------------------------------------------------------------------------------------























